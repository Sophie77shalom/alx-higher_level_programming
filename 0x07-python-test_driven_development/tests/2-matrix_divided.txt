==============================

How to use 2-matrix_divided.py

=============================



Importing the function from the module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided



Simple tests



Dividing a matrix by 3:

	>>> matrix_divided([[6, 5, 4], [9, 8, 7]], 3)

	[[2.0, 1.67, 1.33], [3.0, 2.67, 2.33]]



Error tests



Dividing matrix by 0:

	>>> matrix_divided([[6, 5, 4], [9, 8, 7]], 0)

	Traceback (most recent call last):

	...

	ZeroDivisionError: division by zero



Dividing a matrix with rows of unequal size:

	>>> matrix_divided([[2, 4], [6.8], [10, 12]], 2)

	Traceback (most recent call last):

	TypeError: Each row of the matrix must have the same size



Passing a tuple as an argument:

	>>> matrix_divided((3, 6, 9), 3)

	Traceback (most recent call last):

	TypeError: matrix must be a matrix (lists of lists) of integers/floats



Passing div as a string

	>>> matrix_divided([[6, 5, 4], [9, 8, 7]], "3")

	Traceback (most recent call last):

	TypeError: div must be a number



Dividing a matrix which some of its elements are not integers/floats

	>>> matrix_divided([[6, 5], ['6', 6.8], [10, '12']], 3)

	Traceback (most recent call last):

	TypeError: matrix must be a matrix (list of lists) of integers/floats
